# Generated by Django 3.2.9 on 2021-11-29 04:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('pkid', models.BigAutoField(editable=False, help_text='Actual primary key', primary_key=True, serialize=False, verbose_name='primary Key')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for each instance. Used in Foreign Keys and in apis', unique=True, verbose_name='unique id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time of the object. Automatically set at the time of creation.', verbose_name='creation time')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated everytime any model field is updated.', verbose_name='last update time')),
                ('is_active', models.BooleanField(default=True, help_text='Used to implement soft delete. If false, then object is considered deleted.', verbose_name='is active')),
                ('title', models.CharField(help_text='Title of the post.', max_length=255, verbose_name='Title')),
                ('body', models.TextField(help_text='Content of the post.', verbose_name='body')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_posts', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='author')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who first creates this instance. This can be null.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the instance.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='modified by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('pkid', models.BigAutoField(editable=False, help_text='Actual primary key', primary_key=True, serialize=False, verbose_name='primary Key')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for each instance. Used in Foreign Keys and in apis', unique=True, verbose_name='unique id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time of the object. Automatically set at the time of creation.', verbose_name='creation time')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated everytime any model field is updated.', verbose_name='last update time')),
                ('is_active', models.BooleanField(default=True, help_text='Used to implement soft delete. If false, then object is considered deleted.', verbose_name='is active')),
                ('body', models.TextField(help_text='Contents of the comment.', verbose_name='body')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postcomments', to=settings.AUTH_USER_MODEL, to_field='uuid')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who first creates this instance. This can be null.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='created by')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='post.post', to_field='uuid')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the instance.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='modified by')),
            ],
            options={
                'db_table': 'post_comment',
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('pkid', models.BigAutoField(editable=False, help_text='Actual primary key', primary_key=True, serialize=False, verbose_name='primary Key')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for each instance. Used in Foreign Keys and in apis', unique=True, verbose_name='unique id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time of the object. Automatically set at the time of creation.', verbose_name='creation time')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated everytime any model field is updated.', verbose_name='last update time')),
                ('is_active', models.BooleanField(default=True, help_text='Used to implement soft delete. If false, then object is considered deleted.', verbose_name='is active')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who first creates this instance. This can be null.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='created by')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='post.post', to_field='uuid')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the instance.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='modified by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postlikes', to=settings.AUTH_USER_MODEL, to_field='uuid')),
            ],
            options={
                'db_table': 'post_like',
            },
        ),
        migrations.CreateModel(
            name='PostCommentLike',
            fields=[
                ('pkid', models.BigAutoField(editable=False, help_text='Actual primary key', primary_key=True, serialize=False, verbose_name='primary Key')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for each instance. Used in Foreign Keys and in apis', unique=True, verbose_name='unique id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time of the object. Automatically set at the time of creation.', verbose_name='creation time')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated everytime any model field is updated.', verbose_name='last update time')),
                ('is_active', models.BooleanField(default=True, help_text='Used to implement soft delete. If false, then object is considered deleted.', verbose_name='is active')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='post.postcomment', to_field='uuid')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who first creates this instance. This can be null.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the instance.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, to_field='uuid', verbose_name='modified by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postcommentlikes', to=settings.AUTH_USER_MODEL, to_field='uuid')),
            ],
            options={
                'db_table': 'postcomment_like',
            },
        ),
    ]
